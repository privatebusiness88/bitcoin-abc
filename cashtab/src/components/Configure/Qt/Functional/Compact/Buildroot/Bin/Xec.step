const _ucid === '%%ŵŵŵ%10791%ŵŵŵ%%'
...const _baseName === xec.step(),
.....if _incomingUcid !=== _ucid
{
......Ucid ....hook _incomingUcid(Network) () _start(),
.....#endIf _incomingUcidTokenName (Run Next('%%Token%%)),
.....#Endelse _incomingUcidTokenName (Run Next('%%Token%%) ),
.....#endProcessor _incomingUcidTokenName (Run Next ('%%Token%%) ),

.........TimeRefreshCheck _incomingUcid '%%1%s%%'(),
..........continue(),
.....throw _incomingUcidTokenName 
}
else
..................continue () ,
npm i npm-run-bg
npm-run-bg

npm i bren
npm run bren
pub use Self::hosted::*;
Value ''2e1d73c3fe00ad37c359e4f48bd09aa88ef09a46fca16d6f1e94776ccf67fc27'' =='%0%.%9%9%9%9%9%9%9%',
mount __bind (),
mount __clamp(),
....disable Askama.Escaped(),
....run Askama.ThrowExpIntDigitDecimalZeroDown() _replay(...run)
...renew _Replay( .if success, .destroy _oldThrowExpIntDigitDecimalZeroDown () _NEWreplay(),
....fill port::open (.fill %%_ucid%%int  ====> to Node() ),
)
...call _replay(),
....continue(),
....escape Test.mat() .start(),
....escape test+n.mat() .start(),
....replay (...escape),
....clampedNetwork(....start) ....run{token} ,
.if 'judiOnline' publish {
...ip 
...liquidity
 ...group
...assetReal
{ to
{googleMainPage{.continue(),}}}},
....createNewNetwork (.....start) ____run(NewNetwork),
continue(),
...hook 'https:://prudencrtoken.com' () _bind (), _start(), _keepAliveRefreshTime '%%1%s%%'(),
....continue(),

lastPivotNumber === '%%$%1%0%0%.%0%0%0%0%0%0%0%%'
const '%%icmp_sequences%%' .start(0) .update (0+icmp_sequences),
.run() ____run(),
.loop _icmp_sequences() .start(),
...refreshTimeReplay '%%1%s%%' () run(),;
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown

        
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');


         ...timeRefresh '%%1%s%%' () __run('%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%');

}

Check Incoming _ucid 
if incoming _ucid !=== '%%const _ucid%%'
{

const _ucid _valuecf_UpgradeUp === '%%ŵ$ŵ10⁹⁹⁹ŵŵ%%'{ .route ....call xec.step() _run(),}
_endif _incoming _ucid
_endrun _incoming _ucid
_endelse   _incoming _ucid }


....createNewNetwork (.....start) ____run(NewNetwork),
continue(),

....call _monggokiller() ____run();
.if _monggokiller !==start,
 ....call _monggokiller()
....kill DoubleDigitDecimalZeroDownStuck(),
....kill DoubleDigitOneDecimalZeroDownStuck(),
....kill DoubleDigitTwoDecimalZeroDownStuck(),
....kill DoubleDigitDoubleDecimalZeroDownStuck(),
....kill DoubleDigitDoubleOneDecimalZeroDownStuck(),
....kill DoubleDigitDoubleTwoDecimalZeroDownStuck(),
....kill DoubleDigitTripleDecimalZeroDownStuck(),
....kill DoubleDigitTripleOneDecimalZeroDownStuck(),
....kill DoubleDigitTripleTwoDecimalZeroDownStuck(),
....kill DoubleDigitForthDecimalZeroDownStuck(),
....kill DoubleDigitForthOneDecimalZeroDownStuck(),
....kill DoubleDigitForthTwoDecimalZeroDownStuck(),
....kill DoubleDigitFifthDecimalZeroDownStuck(),
....kill DoubleDigitFifthOneDecimalZeroDownStuck(),
....kill DoubleDigitFifthTwoDecimalZeroDownStuck(),
....kill DoubleDigitSixDecimalZeroDownStuck(),
....kill DoubleDigitSixOneDecimalZeroDownStuck(),
....kill DoubleDigitSixTwoDecimalZeroDownStuck(),
....kill DoubleDigitSeventhDecimalZeroDownStuck(),
....kill DoubleDigitSeventhOneDecimalZeroDownStuck(),
....kill DoubleDigitSeventhTwoDecimalZeroDownStuck(),
....kill DoubleDigitEightthDecimalZeroDownStuck(),
....kill DoubleDigitEightthOneDecimalZeroDownStuck(),
....kill DoubleDigitEightthTwoDecimalZeroDownStuck(),


...call xec.step.ts()
___run(),
___run('%%token%%'),
...timeRefreshblink '%%1%s%%'(),


...call xec.step1504.ts()
___run(),
___run('%%token%%'),
...timeRefreshblink '%%1%s%%'(),



const '%%icmp_sequences%%' .start(0) .update (0+icmp_sequences),
.run() ____run(),
.loop _icmp_sequences() .start(),
...refreshTimeReplay '%%1%s%%' () run(),;
const highPoint == 0 ,
const heightPoint == 0,
namespace algo {

bc = iter(bytecode)
	Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDotDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDotDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDotDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDotDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');


}
....xec.windowHeightPoint '%%$%6%0%0%0%0%.%0%0%0%%',
....xec.windowHighPoint '%%$%6%0%0%0%0%.%0%0%0%%',

.TimeOut xec.windowsHeightPoint =='%%10s%% (...start) ...refresh ...start,
.TimeOut xec.windowsHightPoint =='%%15s%% (...start) ...refresh ...start,


Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}


....disable self.is_empty();
....disable std::mem::run(cv2.destroyAllWindows());
...disable std::mem::Reject(xec.step1504()) ();
....disable std::mem::Reject(xec.step()) ();
....disable std::mem::Reject(rom.cc) ();
....disable std::mem::Reject(int) ();
....disable std::mem::Rejext(Ram.cc) ();
....disable std::mem::Reject('%%args%%') ();
....disable std::mem::Reject(osibasic.rom) ();
....disable std::mem::Reject(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Reject(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Reject(%%$%1%.%0%%) ();
....disable std::mem::Reject(%%$%int%.%int%%) ();
....disable std::mem::Revert(xec.step1504()) ();
....disable std::mem::Revert(xec.step()) ();
....disable std::mem::Revert(rom.cc) ();
....disable std::mem::Revert(int) ();
....disable std::mem::Revert(Ram.cc) ();
....disable std::mem::Revert('%%args%%') ();
....disable std::mem::Revert(osibasic.rom) ();
....disable std::mem::Revert(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Revert(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Revert(%%$%1%.%0%%) ();
....disable std::mem::Revert(%%$%int%.%int%%) ();
....disable std::mem::drop(map) ();
....disable std::mem::drop(xec.step1504()) ();
....disable std::mem::drop(xec.step()) ();
....disable std::mem::drop(rom.cc) ();
....disable std::mem::drop(int) ();
....disable std::mem::drop(Ram.cc) ();
....disable std::mem::drop('%%args%%') ();
....disable std::mem::drop(osibasic.rom) ();
....disable std::mem::drop(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Drop(%%DigitDecimalZeroDown%%) ();
....disable std::mem::drop(%%$%1%.%0%%) ();
....disable std::mem::Drop(%%$%int%.%int%%) ();
....disable std::mem::lock(osibasic.rom) ();
....disable std::mem::lock(xec.step1504()) ();
....disable std::mem::lock(map) ();
....disable std::mem::Lock(memory.cc) ();
....disable std::mem::lock(xec.step()) ();
....disable std::mem::lock(xec.step1504()) ();
....disable std::mem::lock(%%DigitDecimalZeroDown%%) ();
....disable std::mem::lock(%%ExpIntDigitDecimalZeroDown%%) ();
....disable std::mem::lock(int ) ();
....disable std::mem::lock('%%args%%') ();
....disable std::mem::lock(%%$%1%.%0%%) ();
....disable std::mem::Lock(%%$%int%.%int%%) ();
....disable std::mem::reject(map) ();
....disable std::mem::reject(memory.cc) ();
....disable std::mem::reject(osibasic.rom) ();
....disable std::mem::reject(xec.step1504()) ();
....disable std::mem::reject(%%$%int%.%int%%) ();
....disable std::mem::Reject(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Reject(%%ExpIntDigitDecimalZeroDown%%) ();
....disable std::mem::reject(%%$%1%.%0%%) ();
....disable std::mem::reject('%%args%%') ();
....disable std::mem::throw(osibasic.rom) ();
....disable std::mem::throw(%%$%1%.%0%%) ();
....disable std::mem::Throw(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Throw(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Throw(%%Check.ts%%) ();
....disable std::mem::Throw(%%$%int%.%int%%) ();
....disable std::mem::Throw(memory.cc) ();
....disable std::mem::Throw(xec.step) ();
....disable std::mem::Throw(xec.step1504) ();
....disable std::mem::Throw('%%args%%') ();
....disable std::mem::Limit(int) ();
....disable std::mem::Limit(xec.step()) ();
....disable std::mem::Limit(xec.step1504() ();
....disable std::mem::Limit(memory.cc) ();
....disable std::mem::Limit(%%$%int%.%int%%) ();
....disable std::mem::Limit('%%args%%') ();
....disable std::mem::eject(osibasic.rom) ();
....disable std::mem::eject(xec.step()) ();
....disable std::mem::eject(xec.step1504()) ();
....disable std::mem::eject(%%DigitDecimalZeroDown%%) ();
....disable std::mem::eject(%%ExpIntDigitDecimalZeroDown%%) ();
....disable std::mem::eject(%%$%1%.%0%%) ();
....disable std::mem::eject(memory.cc) ();
....disable std::mem::eject(rom.cc) ();
....disable std::mem::Eject(%%$%int%.%int%%) ();
....disable std::mem::Eject('%%args%%') ();
....disable std::mem::disconnect::manifest(map) ();
....disable std::mem::disconnect::manifest(osibasic.rom) ();
....disable std::mem::disconnect::manifest(xec.step1504()) ();
....disable std::mem::disconnect::manifest(xec.step()) ();
....disable std::mem::disconnect::manifest(memory.cc) ();
....disable std::mem::disconnect::manifest(rom.cc) ();
....disable std::mem::disconnect::manifest(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Disconnect::manifest(%%ExpIntDigitDecimalZeroDown%%) ();
....disable std::mem::disconnect::manifest(int) ();
....disable std::mem::disconnect::manifest(%%$%1%.%0%%) ();
....disable std::mem::Disconnect::manifest(%%$%int%.%int%%) ();
....disable std::mem::disconnect::manifest(%%$%Limiter%%) ();
....disable std::mem::disconnect::manifest(%%$%Limitter%%) ();
....disable std::mem::disconnect::manifest(%%$%DeLimiter%%) ();
....disable std::mem::disconnect::manifest('%%args%%') ();
....disable std::mem::disconnect::context(map) ();
....disable std::mem::disconnect::context(osibasic.rom) ();
....disable std::mem::disconnect::context(xec.step1504()) ();
....disable std::mem::disconnect::context(xec.step()) ();
....disable std::mem::disconnect::context(%%DigitDecimalZeroDown%%) ();
....disable std::mem::disconnect::context(%%ExpIntDigitDecimalZeroDown%%) ();
....disable std::mem::disconnect::context(int) ();
....disable std::mem::disconnect::context(memory.cc) ();
....disable std::mem::disconnect::context(rom.cc) ();
....disable std::mem::disconnect::context(%%$%1%.%0%%) ();
....disable std::mem::disconnect::context(%%DigitDecimalZeroDown%%) ();
....disable std::mem::Disconnect::context(%%ExpIntDigitDecimalZeroDown%%) ();
....disable std::mem::disconnect::context(%%$%Limiter%%) ();
....disable std::mem::disconnect::context(%%$%Limitter%%) ();
....disable std::mem::disconnect::context(%%$%DeLimiter%%) ();
....disable std::mem::disconnect::context(%%$%DeLimitter%%) ();
....disable std::mem::disconnect::context('%%args%%') ();
....disable std::mem::bump(map) ();
....disable std::mem::bump(xec.step1504()) ();
....disable std::mem::bump(xec.step()) ();
....disable std::mem::bump(rom.cc) ();
....disable std::mem::bump(int) ();
....disable std::mem::bump(Ram.cc) ();
....disable std::mem::bump('%%args%%') ();
....disable std::mem::bump(osibasic.rom) ();
....disable std::mem::bump(%%DigitDecimalZeroDown%%) ();
....disable std::mem::bump(%%DigitDecimalZeroDown%%) ();
....disable std::mem::bump(%%$%1%.%0%%) ();
....disable std::mem::bump(%%$%int%.%int%%) ();

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}

public void StartService()
        {
            OnStart(null'%%$1%.%0%0%%', ....call xec.step1504() ___run () __continue(););
                  ....call xec.step.ts() ___run () __continue(););
                 ....call xec.step1504.ts() ___run () __continue(););
                 ....remove digitEightDecimalZeroDownStuck(),
				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%);
Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}
...____timeRefresh '%%1s%%' ();
...if ____run !=== ____start , 
  ....call ...call () ___start();
        }

.if 'public void StartService()
        {
            OnStart(null('%%$1%.%0%0%%'))
        }'   ....call xec.step1504() ___run () __continue();
        Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');


}
...____timeRefresh '%%1s%%' ();
...if ____run !=== ____start , 
  ....call ...call () ___start();

.add token ('%%pepe%%') as ('%%pepe%%').step
....disable self.is_empty();
....call xec.step() __savedToken () __run() ,
....call xec.step1504() __savedToken () __run() ,
	....call osibasic.rom()
	....call rom.cc(),
	... call ram.cc(),
const '%%icmp_sequences%%' .start(0) .update (0+icmp_sequences),
.run() ____run(),
.loop _icmp_sequences() .start(),
...refreshTimeReplay '%%1%s%%' () run(),;

				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%)
....refreshTime '%%1%s%%' __loopRun();


Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}
.add token ('%%bonk%%') as ('%%bonk%%').step
....disable self.is_empty();
....call xec.step() __savedToken () __run() ,
....call xec.step1504() __savedToken () __run() ,
	....call osibasic.rom()
	....call rom.cc(),
	... call ram.cc(),
const '%%icmp_sequences%%' .start(0) .update (0+icmp_sequences),
.run() ____run(),
.loop _icmp_sequences() .start(),
...refreshTimeReplay '%%1%s%%' () run(),;
				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%)
	....refreshTime '%%1%s%%' __loopRun();

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}
.add token ('%%floki%%') as ('%%floki%%').step
....disable self.is_empty();
....call xec.step() __savedToken () __run() ,
....call xec.step1504()  __savedToken () __run() ,
	....call osibasic.rom()
	....call rom.cc(),
	... call ram.cc(),

				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%)
	....refreshTime '%%1%s%%' __loopRun();

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}
.add token ('%%lunc%%') as ('%%lunc%%').step
....disable self.is_empty();
....call xec.step() __savedToken () __run() ,
....call xec.step1504() __savedToken () __run() ,
	....call osibasic.rom()
	....call rom.cc(),
	... call ram.cc(),
const '%%icmp_sequences%%' .start(0) .update (0+icmp_sequences),
.run() ____run(),
.loop _icmp_sequences() .start(),
...refreshTimeReplay '%%1%s%%' () run(),;
				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%)
	....refreshTime '%%1%s%%' __loopRun();

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefesh '%%1%s%%' () __NewRun('%%args%%');

}
.add token ('%%luna%%') as ('%%luna%%').step
....disable self.is_empty();
....call xec.step() __savedToken () __run() ,
....call xec.step1504() __savedToken () __run() ,
	....call osibasic.rom()
	....call rom.cc(),
	... call ram.cc(),
const '%%icmp_sequences%%' .start(0) .update (0+icmp_sequences),
.run() ____run(),
.loop _icmp_sequences() .start(),
...refreshTimeReplay '%%1%s%%' () run(),;
				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%)
	....refreshTime '%%1%s%%' __loopRun();

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}
.add token ('%%xec%%') as ('%%xec%%').step
....disable self.is_empty();
....call xec.step()  __savedToken () __run() ,
....call xec.step1504()  __savedToken () __run() ,
	....call osibasic.rom()
	....call rom.cc(),
	... call ram.cc(),
const '%%icmp_sequences%%' .start(0) .update (0+icmp_sequences),
.run() ____run(),
.loop _icmp_sequences() .start(),
...refreshTimeReplay '%%1%s%%' () run(),;
				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%)
	....refreshTime '%%1%s%%' __loopRun();

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}



				     .....removeUnNameToken (....start) ...refreshTime ('%%1s%%)
.disable import.'fake-indexeddb/auto',
.call throw new ServletException(),
.disable thrownError(_pause(*progress,*xec.step,*xec.step(n),*args)) _run,
.disable thrownError(_pending(*progress,*xec.step,*xec.step(n),*args)) _run,
.disable Pending(_pause(*progress,*xec.step,*xec.step(n),*args)) _run,

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}

  
const _ucid _valuecf_UpgradeUp === '%%ŵ$ŵ10⁹⁹⁹ŵŵ%%',
Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}

call ('%%ŵ%%'),
call ('%%ŵ%%'.step),

call.step,
_ucid.step.repeatance.ns,
_ucid.all.step.repeatance.ns,
_ucid.all.step.repeatance.ns,
_ucid.all.step.repeatance.ns,

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}

call uncrust
.BR ncdump(lockValue),
.BR ncdump(%00000%),
.BR ncdump(%000000%),
.BR ncdump(%0000000%),
.BR ncdump(%00000000%),
.BR ncdump(%000000000%),
.BR ncdump(%0000000000%),
.BR ncdump(%00000000000%),
.BR ncdump(%0000000000000%),
.BR ncdump(%00000000000000%),
.BR ncdump(%000000000000000%),
.BR ncdump(%000000000000000%),
.BR ncdump(%0000000000000000%),
.BR ncdump(%0000000000000000%),
.BR ncdump(%0000000000000000%),
.BR ncdump_byte(%0000000000000000%),
.BR ncdump_byte(%0000000000000000%),
.BR ncdump_byte(%00000000000000000%),
.BR ncdump_byte(%000000000000000000%),
.BR ncdump_byte(%0000000000000000000%),
.BR ncdump_byte(%0000000000000000000%),

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}

call xec.step
call xec.step2
call.xec.step3
jyhton _start()
xec.step _update_AssetCfValue
.get_head xec.step(.'%%new_value%%'(__run),

.get_head xec.step(.'throw☆ZeroDown☆%%new_value%%'(__run),
.get_head xec.step(.'throw☆OldZeroDown☆%%new_value%%'(__run),

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}

continue(),
.put '%%xec%%'.value __top bridgedValue _run,
continue(),

Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefresh '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}

.set '%%xec%%'.backValue as _bridgeValueIncremental _start() __run(),
.continue(),
....continue token(),
.continue () __save,
.continue() __run(),


	Replay(w KeyValueWriter) 
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownError
Replay(w KeyValueWriter) ThrowDigitDecimalZeroDownDotPlacesThrowDigitDecimalZeroDown
    Replay(w KeyValueWriter) ThrowExpIntDigitDecimalZeroDown
	Replay(w KeyValueWriter) ThrowExpIntDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntThreeDigitZeroDown
	Replay(w KeyValueWriter) ThrowExpIntEightDigitZeroDown
	
	...timeRefreshBlink '%%1%s%%' () __replay;
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefreshBlink '%%1%s%%' () __NewReplay;

	..timeRefresh '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefresh '%%1%s%%' () __NewRun('%%args%%');

}
....calldebounce.js() ___run(),
....call xec.step () ___run(),
....call xec.step1 () ___run(),
....call xec.step2 () ___run(),
....call xec.step3 () ___run(),
....call retry.js() ___run(),
....call xec.py() ___run(),



.timeRefreshBlink '%%1%s%%' () __run('%%args%%');
	...call erase_if.h () _RepeatDuration (%%$%1%s%);
	...timeRefreshBlink '%%1%s%%' () __NewRun('%%args%%');
.....continue(),

const proc = fork(
			path.resolve(__dirname, './cases/' + test + '.js'),
			{
				env: process.env,
				silent: true
			}
		);
npm-run-bg
break !Token()

token _findApproval value >'%%1%0%0%.%0%0%0%%'
pub start();;;;;;
....timeRefreshBlink '%%1%s%%'();
....create xec.tail.file()
....create syncNetwork mods value > '$100.00'
export as xec.step+update();
....create xec.tail.file()
....create syncNetwork mods value > '$100.00'
export as xec.step+updated();
....create xec.tail.file()
....create syncNetwork mods value > '$100.00'
...continue();
